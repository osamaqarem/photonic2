name: Lambda

on:
  push:
    branches:
      # prod env not created
      # - main
      - dev

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    # only build/deploy branch on pushes
    if: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && github.event_name == 'push' }}
    defaults:
      run:
        working-directory: ./apps/lambda/terraform

    steps:
      - name: Add aws profile credentials to ~/.aws/credentials
        run: |
          aws configure set region eu-central-1 --profile photonic
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} --profile photonic
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} --profile photonic

      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: "16"

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --immutable --prefer-offline

      - name: Init Terraform
        run: terraform init

      - name: Deploy Staging
        if: ${{ github.ref == 'refs/heads/dev' }}
        run: |
          terraform apply --var-file=staging.tfvars -auto-approve

      - name: Deploy Production
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          terraform apply --var-file=production.tfvars -auto-approve
