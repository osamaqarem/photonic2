generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  // url          = "postgresql://postgres:proxy_password@localhost:5133/postgres"
  relationMode = "prisma"
}

model User {
  id            String @id @default(dbgenerated("prefix_nanoid('usr_'::text)"))

  email         String  @unique
  assets        Asset[]

  awsAccount    AwsAccount? @relation(fields: [awsAccountId], references: [id])
  awsAccountId  String?

  awsBucket     AwsBucket?

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@index([awsAccountId])
}

model AwsAccount {
  id         String      @id @default(dbgenerated("prefix_nanoid('aws_'::text)"))
  externalId String      @unique
  users      User[]
  buckets    AwsBucket[]
}

model AwsBucket {
  id      String @id @default(dbgenerated("prefix_nanoid('buk_'::text)"))
  name    String @unique
  region  String
  roleArn String

  awsAccount   AwsAccount @relation(fields: [awsAccountId], references: [id])
  awsAccountId String

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique

  @@index([awsAccountId, userId])
}

model Asset {
  id            String @id @default(dbgenerated("prefix_nanoid('ass_'::text)"))

  localId       String?
  uri           String?

  deviceId      String
  name          String
  type          String
  mediaType     String
  width         Int
  height        Int
  duration      Int
  creationTime  DateTime

  user         User   @relation(fields: [userId], references: [id])
  userId       String

  @@index([userId, creationTime])
}