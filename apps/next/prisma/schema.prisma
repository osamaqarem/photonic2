generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id            String      @id @default(dbgenerated("prefix_nanoid('usr_'::text)"))

  email         String      @unique
  photos        Photo[]
  albums        Album[]

  awsAccount    AwsAccount? @relation(fields: [awsAccountId], references: [id])
  awsAccountId  String?

  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  @@index([awsAccountId])
}

model AwsAccount {
  id               String    @id @default(dbgenerated("prefix_nanoid('aws_'::text)"))

  bucketName       String
  bucketRegion     String
  roleArn          String

  user             User[]
}

model Album {
  id               String    @id @default(dbgenerated("prefix_nanoid('alb_'::text)"))

  title            String
  photos           Photo[]

  user             User      @relation(fields: [userId], references: [id])
  userId           String
  @@index([userId])
}

model Photo {
  id            String    @id @default(dbgenerated("prefix_nanoid('pho_'::text)"))

  name          String
  mediaType     MediaType
  width         Int
  height        Int
  duration      Int
  creationTime  Int
  album         Album[]

  user          User      @relation(fields: [userId], references: [id])
  userId        String
  @@index([userId])
  @@unique(name: "photoId", [name, userId])
}

enum MediaType {
  photo
  video
}